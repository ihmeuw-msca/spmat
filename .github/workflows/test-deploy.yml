name: test_deploy

on:
  # Manual run from the Actions tab or gh CLI
  workflow_dispatch:
    inputs:
      run_tests:
        description: "Run pytest against each built wheel?"
        type: boolean
        default: true
  # TEMP: Register & allow runs from your branch without merging to default
  push:
    branches: [ feat/add-wheels ]

permissions:
  contents: read

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13]

    steps:
      - uses: actions/checkout@v4

      - name: Set up host Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build wheels with cibuildwheel
        uses: pypa/cibuildwheel@v3.1.4
        with:
          output-dir: wheelhouse
        env:
          # macOS: build a single wheel that runs natively on Intel and Apple Silicon
          CIBW_ARCHS_MACOS: universal2

          # Skip Windows 32-bit builds
          CIBW_SKIP: "*-win32"

          # If tests are enabled, run them; skip the arm64 half on Intel
          CIBW_TEST_REQUIRES: ${{ inputs.run_tests && 'pytest' || '' }}
          CIBW_TEST_COMMAND: ${{ inputs.run_tests && 'pytest -q {project}/tests' || '' }}
          CIBW_TEST_SKIP: ${{ inputs.run_tests && '*_arm64 *-macosx_universal2:arm64' || '' }}

          # Up-to-date build tooling
          CIBW_BEFORE_BUILD: "pip install --upgrade pip setuptools wheel"

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  # Test the macOS universal2 wheel on Apple Silicon
  test_macos_arm:
    name: Test macOS universal2 wheel on Apple Silicon
    needs: [build_wheels]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheels-*
          merge-multiple: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install universal2 wheel and run tests (arm64 native)
        shell: bash
        run: |
          set -euo pipefail
          echo "Available wheels:"
          ls -la dist/*.whl || true
          # Install the wheel matching the current Python version (3.12)
          pip install dist/*cp312*macosx_*_universal2.whl
          # Install pytest for testing
          pip install pytest
          pytest -q tests

  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Build sdist
        run: |
          python -m pip install --upgrade pip build
          python -m build --sdist
      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  collect_artifacts:
    name: Collect all artifacts (no publish)
    needs: [build_wheels, build_sdist, test_macos_arm]
    runs-on: ubuntu-latest
    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheels-*
          merge-multiple: true
      - name: Download sdist
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist
      - name: List outputs
        run: ls -lah dist
      - name: Re-upload merged dist folder
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*
