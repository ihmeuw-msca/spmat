name: deploy

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Both macOS runners to cover Intel (macos-13) and Apple Silicon (macos-latest)
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up host Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build wheels with cibuildwheel
        uses: pypa/cibuildwheel@v3.1.4
        with:
          output-dir: wheelhouse
        env:
          CIBW_SKIP: "*-win32"  # Skip Windows 32-bit builds
          CIBW_TEST_REQUIRES: "pytest"
          CIBW_TEST_COMMAND: "pytest -q {project}/tests"

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Build sdist
        run: |
          python -m pip install --upgrade pip build
          python -m build --sdist
      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  upload_pypi:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheels-*
          merge-multiple: true
      - name: Download sdist
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist
      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
